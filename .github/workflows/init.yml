name: Init Koillection for tests

on:
  workflow_call:
    inputs:
      DB_DRIVER:
        required: true
        type: string
      DB_PORT:
        required: true
        type: string
      DB_VERSION:
        required: true
        type: string

jobs:
  phpunit:
    name: Init Koillection for tests

    steps:
      - uses: actions/checkout@v2

      # Setup php env and install dependencies
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, fileinfo, apcu
      - uses: actions/cache@v3
        id: composer-cache
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - uses: actions/cache@v3
          id: composer-cache
          with:
            path: vendor
            key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
            restore-keys: |
              ${{ runner.os }}-php-
      - run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      # Setup environment variables
      - run: php -r "file_exists('.env.local') || copy('.env', '.env.local');"

      - run: sed -i "s|DB_DRIVER=.*|DB_DRIVER=${{ inputs.DB_DRIVER }}|i" ".env.local"
      - run: sed -i "s|DB_PORT=.*|DB_PORT=${{ inputs.DB_PORT }}|i" ".env.local"
      - run: sed -i "s|DB_VERSION=.*|DB_VERSION=${{ inputs.DB_VERSION }}|i" ".env.local"

      - run: sed -i "s|DB_NAME=.*|DB_NAME=koillection|i" ".env.local"
      - run: sed -i "s|DB_HOST=.*|DB_HOST=127.0.0.1|i" ".env.local"
      - run: sed -i "s|DB_USER=.*|DB_USER=root|i" ".env.local"
      - run: sed -i "s|DB_PASSWORD=.*|DB_PASSWORD=root|i" ".env.local"


      # Setup yarn
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: (cd assets && yarn install)
      - run: (cd assets && yarn build)

      # Setup test environment
      - run: bin/console lexik:jwt:generate-keypair --env=prod
      - run: bin/console doctrine:database:create --env=prod
      - run: bin/console doctrine:migration:migrate --no-interaction --allow-no-migration --env=prod
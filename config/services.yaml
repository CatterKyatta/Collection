parameters:
    release: '1.3.6'
    locale: 'en-GB'
    uuid_regex: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
            $defaultLocale: '%locale%'
            $publicPath: '%kernel.project_dir%/public'
            $assetsPath: '%kernel.project_dir%/assets'
            $koillectionRelease: '%release%'

    App\:
        resource: '../src/*'
        exclude:
            - '../src/Entity/'
            - '../src/Model/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    #Kernel listeners
    App\EventListener\TranslationCommandListener:
        tags:
            - { name: kernel.event_listener, event: console.terminate }

    App\EventListener\ContextListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 255 }
    App\EventListener\LocaleListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 15 }
            - { name: kernel.event_listener, event: security.interactive_login }
            - { name: doctrine.event_listener, event: postUpdate, lazy: true }
    App\EventListener\FilterListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request }
    App\EventListener\ActivityListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request }
    App\EventListener\TimezoneListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request }
    App\EventListener\SeenListener:
        tags:
            - { name: kernel.event_listener, event: kernel.response}

    App\EventListener\AccessDeniedListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, lazy: true }

    #Doctrine listeners
    App\EventListener\CounterCacheListener:
        tags:
            - { name: doctrine.event_listener, event: postPersist, lazy: true }
            - { name: doctrine.event_listener, event: postUpdate, lazy: true }
            - { name: doctrine.event_listener, event: postRemove, lazy: true }

    App\EventListener\TimestampableListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist, lazy: true }
            - { name: doctrine.event_listener, event: preUpdate, lazy: true }

    App\EventListener\OwnershipListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist, lazy: true }

    App\EventListener\ColorListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist, lazy: true }

    App\EventListener\UploadListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist, lazy: true }
            - { name: doctrine.event_listener, event: onFlush, lazy: true }
            - { name: doctrine.event_listener, event: postRemove, lazy: true }
            - { name: doctrine.event_listener, event: postLoad, lazy: true }

    App\EventListener\LoggableListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist, lazy: true, priority: -5 }
            - { name: doctrine.event_listener, event: preRemove, lazy: true, priority: -5 }
            - { name: doctrine.event_listener, event: postRemove, lazy: true, priority: -5 }

    App\EventListener\VisibilityListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist, lazy: true }
            - { name: doctrine.event_listener, event: onFlush, lazy: true }

    App\EventListener\UserListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist, lazy: true }
            - { name: doctrine.event_listener, event: preUpdate, lazy: true }

    # Form extension
    App\Form\Extension\ModelTransformerExtension:
        tags:
            - { name: form.type_extension, extended_type: Symfony\Component\Form\Extension\Core\Type\FormType }

    # API
    Api\OpenApi\JwtDecorator:
        decorates: 'api_platform.openapi.factory'
        arguments: [ '@.inner' ]
    Api\Doctrine\Extension\OwnershipExtension:
        tags:
            - { name: api_platform.doctrine.orm.query_extension.collection }
            - { name: api_platform.doctrine.orm.query_extension.item }
    Api\Encoder\MultipartDecoder:
        tags:
            - { name: serializer.encoder }
    Api\Serializer\ApiNormalizer:
        decorates: 'api_platform.jsonld.normalizer.item'
    Api\Serializer\UploadedFileDenormalizer:
        tags:
            - { name: serializer.normalizer }